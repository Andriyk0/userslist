{"version":3,"sources":["store/index.ts","store/selectors.ts","components/Footer/Footer.tsx","components/Header/Header.tsx","api/api.ts","components/Posts/Posts.tsx","components/Loader/Loader.tsx","components/Users/Users.tsx","pages/MainPage/MainPage.tsx","App.tsx","index.tsx"],"names":["ActionType","initialState","users","userPosts","selectUser","undefined","sortValue","searchValue","start","setUsers","createAction","SET_USERS","setUserPosts","SET_USER_POSTS","setSelectUser","SET_SELECT_USER","setSortValue","SET_SORT_VALUE","setSearchValue","SET_SEARCH_VALUE","setStart","SET_START","reducer","createReducer","builder","addCase","state","action","payload","store","configureStore","getUserPostsFromStore","getSelectedUser","getSortValue","getSearchValue","getStart","Footer","dispatch","useDispatch","useSelector","className","disabled","type","onClick","src","alt","Header","value","onChange","event","target","placeholder","API","getUsers","a","fetch","response","json","getUserPosts","id","Posts","user","posts","useState","selectPostId","setSelectPostId","useEffect","alert","loadUserPostsFromServer","map","post","showPost","aria-hidden","title","body","Loader","Users","optionValue","query","filter","name","toLowerCase","includes","sort","b","localeCompare","loadUsersFromServer","classnames","user1","splice","user__card1","user__info1","email","phone","website","user__button1","length","MainPage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b92b176.chunk.js","sourcesContent":["import { createAction, createReducer, configureStore } from '@reduxjs/toolkit';\n\n// eslint-disable-next-line no-shadow\nenum ActionType {\n  SET_USERS = 'SET_USERS',\n  SET_USER_POSTS = 'SET_USER_POSTS',\n  SET_SELECT_USER = 'SET_SELECT_USER',\n  SET_SORT_VALUE = 'SET_SORT_VALUE',\n  SET_SEARCH_VALUE = 'SET_SEARCH_VALUE',\n  SET_START = 'SET_START',\n}\n\nconst initialState:State = {\n  users: [],\n  userPosts: [],\n  selectUser: undefined,\n  sortValue: 'All',\n  searchValue: '',\n  start: 0,\n};\n\nexport const setUsers = createAction<User[]>(ActionType.SET_USERS);\nexport const setUserPosts = createAction<Post[]>(ActionType.SET_USER_POSTS);\nexport const setSelectUser = createAction<User>(ActionType.SET_SELECT_USER);\nexport const setSortValue = createAction<string>(ActionType.SET_SORT_VALUE);\nexport const setSearchValue = createAction<string>(ActionType.SET_SEARCH_VALUE);\nexport const setStart = createAction<number>(ActionType.SET_START);\n\nconst reducer = createReducer(initialState, (builder) => {\n  builder.addCase(setUsers, (state, action) => {\n    // eslint-disable-next-line no-param-reassign\n    state.users = action.payload;\n  });\n\n  builder.addCase(setUserPosts, (state, action) => {\n    // eslint-disable-next-line no-param-reassign\n    state.userPosts = action.payload;\n  });\n\n  builder.addCase(setSelectUser, (state, action) => {\n    // eslint-disable-next-line no-param-reassign\n    state.selectUser = action.payload;\n  });\n\n  builder.addCase(setSortValue, (state, action) => {\n    // eslint-disable-next-line no-param-reassign\n    state.sortValue = action.payload;\n  });\n\n  builder.addCase(setSearchValue, (state, action) => {\n    // eslint-disable-next-line no-param-reassign\n    state.searchValue = action.payload;\n  });\n\n  builder.addCase(setStart, (state, action) => {\n    // eslint-disable-next-line no-param-reassign\n    state.start = action.payload;\n  });\n});\n\nexport const store = configureStore({\n  reducer,\n});\n","export const getUsersFromStore = (optionValue:string, query:string) => {\n  return (state:State) => {\n    switch (optionValue) {\n      case 'All':\n        return state.users.filter(user => (\n          user.name.toLowerCase().includes(query.toLowerCase())\n        ));\n      case 'name':\n        return state.users\n          .filter(user => (user.name.toLowerCase().includes(query.toLowerCase())))\n          .sort((a, b) => a.name.localeCompare(b.name));\n      default:\n        return state.users;\n    }\n  };\n};\n\nexport const getUserPostsFromStore = (state:State) => state.userPosts;\nexport const getSelectedUser = (state:State) => state.selectUser;\nexport const getSortValue = (state:State) => state.sortValue;\nexport const getSearchValue = (state:State) => state.searchValue;\nexport const getStart = (state:State) => state.start;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setStart } from '../../store';\nimport { getStart } from '../../store/selectors';\nimport './Footer.scss';\n\nexport const Footer: React.FC = () => {\n  const dispatch = useDispatch();\n  const start = useSelector(getStart);\n\n  const prevPage = () => {\n    dispatch(setStart(start - 4));\n  };\n\n  const nextPage = () => {\n    dispatch(setStart(start + 4));\n  };\n\n  return (\n    <footer className=\"footer\">\n      <button\n        disabled={start === 0}\n        type=\"button\"\n        className=\"footer__button\"\n        onClick={prevPage}\n      >\n        <img className=\"footer__img_left\" src=\"./images/left.svg\" alt=\"\" />\n        Previous\n      </button>\n      <button\n        disabled={start === 8}\n        type=\"button\"\n        className=\"footer__button\"\n        onClick={nextPage}\n      >\n        Next\n        <img className=\"footer__img_right\" src=\"./images/right.svg\" alt=\"\" />\n      </button>\n    </footer>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSearchValue, setSortValue } from '../../store';\nimport { getSearchValue, getSortValue } from '../../store/selectors';\nimport './Header.scss';\n\nexport const Header: React.FC = () => {\n  const dispatch = useDispatch();\n  const sortValue = useSelector(getSortValue);\n  const searchValue = useSelector(getSearchValue);\n\n  return (\n    <header className=\"header\">\n      <select\n        className=\"header__select\"\n        value={sortValue}\n        onChange={(event) => dispatch(setSortValue(event.target.value))}\n      >\n        <option value=\"All\">All</option>\n        <option value=\"name\">Name</option>\n      </select>\n      <input\n        value={searchValue}\n        onChange={(event) => dispatch(setSearchValue(event.target.value))}\n        className=\"header__input\"\n        type=\"text\"\n        placeholder=\"Search\"\n      />\n    </header>\n  );\n};\n","const API = 'https://jsonplaceholder.typicode.com/';\n\nexport const getUsers = async () => {\n  const response = await fetch(`${API}users`);\n\n  return response.json();\n};\n\nexport const getUserPosts = async (id:number) => {\n  const response = await fetch(`${API}posts?userId=${id}`);\n\n  return response.json();\n};\n","import React, { useEffect, useState } from 'react';\nimport './Posts.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSelectedUser, getUserPostsFromStore } from '../../store/selectors';\nimport { getUserPosts } from '../../api/api';\nimport { setUserPosts } from '../../store';\n\nexport const Posts: React.FC = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(getSelectedUser);\n  const posts = useSelector(getUserPostsFromStore);\n  const [selectPostId, setSelectPostId] = useState<number>(0);\n\n  useEffect(() => {\n    const loadUserPostsFromServer = async (id: number) => {\n      try {\n        const response = await getUserPosts(id);\n\n        dispatch(setUserPosts(response));\n      } catch (error) {\n        // eslint-disable-next-line no-alert\n        alert('Error try later');\n      }\n    };\n\n    if (user) {\n      loadUserPostsFromServer(user.id);\n    }\n  }, [user]);\n\n  const showPost = (post:Post) => {\n    if (selectPostId !== post.id) {\n      setSelectPostId(post.id);\n    } else {\n      setSelectPostId(0);\n    }\n  };\n\n  return (\n    <div className=\"post\">\n      {\n        posts.map(post => (\n          <div className=\"post__box\" key={post.id}>\n            <h2\n              onClick={() => showPost(post)}\n              aria-hidden=\"true\"\n              className=\"post__title\"\n            >\n              {post.title}\n            </h2>\n            {\n              selectPostId === post.id && (\n                <p className=\"post__description\">{post.body}</p>\n              )\n            }\n          </div>\n        ))\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => {\n  return (\n    <div className=\"loader\">\n      <div className=\"loader__content\" />\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport classnames from 'classnames/bind';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUsers } from '../../api/api';\nimport { setSelectUser, setUsers } from '../../store';\nimport {\n  getSearchValue, getSelectedUser, getSortValue, getStart, getUsersFromStore,\n} from '../../store/selectors';\nimport './Users.scss';\nimport { Loader } from '../Loader';\n\nexport const Users:React.FC = () => {\n  const dispatch = useDispatch();\n  const sortValue = useSelector(getSortValue);\n  const searchValue = useSelector(getSearchValue);\n  const users = useSelector(getUsersFromStore(sortValue, searchValue));\n  const selectUser = useSelector(getSelectedUser);\n  const start = useSelector(getStart);\n\n  const loadUsersFromServer = async () => {\n    try {\n      const response = await getUsers();\n\n      dispatch(setUsers(response));\n    } catch (error) {\n      // eslint-disable-next-line no-alert\n      alert('Error try again');\n    }\n  };\n\n  useEffect(() => {\n    loadUsersFromServer();\n  }, [searchValue, sortValue]);\n\n  return (\n    <div className={classnames('user', { user1: selectUser })}>\n      {\n        [...users].splice(start, 4).map((user:User) => (\n          <div key={user.id} className={classnames('user__card', { user__card1: selectUser })}>\n            <p className={classnames('user__info', { user__info1: selectUser })}>{user.name}</p>\n            <p className={classnames('user__info', { user__info1: selectUser })}>{user.email}</p>\n            <p className={classnames('user__info', { user__info1: selectUser })}>{user.phone}</p>\n            <p className={classnames('user__info', { user__info1: selectUser })}>{user.website}</p>\n            <button\n              type=\"button\"\n              className={classnames('user__button', { user__button1: selectUser })}\n              onClick={() => dispatch(setSelectUser(user))}\n            >\n              Show user posts\n            </button>\n          </div>\n        ))\n      }\n      {\n        users.length === 0 && (\n          <Loader />\n        )\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Posts } from '../../components/Posts';\nimport { Users } from '../../components/Users';\nimport { getSelectedUser } from '../../store/selectors';\nimport './MainPage.scss';\n\nexport const MainPage: React.FC = () => {\n  const user = useSelector(getSelectedUser);\n\n  return (\n    <div className=\"main\">\n      <Users />\n      {user && (\n        <Posts />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Footer } from './components/Footer';\nimport { Header } from './components/Header';\nimport { MainPage } from './pages/MainPage';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainPage />\n      <Footer />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}